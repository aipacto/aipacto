/* Tiptap Editor Base Styles */
.ProseMirror {
	outline: none;
	min-height: 400px;
	padding: var(--spacing-md);
	color: var(--on-surface);
	font-size: var(--font-size-body-m);
	line-height: 1.6;
}

.ProseMirror:focus {
	outline: none;
}

/* Placeholder */
.ProseMirror p.is-editor-empty:first-child::before {
	color: var(--on-surface-variant);
	content: attr(data-placeholder);
	float: left;
	height: 0;
	pointer-events: none;
	opacity: 0.6;
}

/* Typography */
.ProseMirror h1 {
	font-size: var(--font-size-heading-l);
	font-weight: 600;
	margin: var(--spacing-lg) 0 var(--spacing-md);
	color: var(--on-surface);
	line-height: 1.2;
}

.ProseMirror h2 {
	font-size: var(--font-size-heading-m);
	font-weight: 600;
	margin: var(--spacing-lg) 0 var(--spacing-md);
	color: var(--on-surface);
	line-height: 1.3;
}

.ProseMirror h3 {
	font-size: var(--font-size-title-l);
	font-weight: 500;
	margin: var(--spacing-md) 0 var(--spacing-sm);
	color: var(--on-surface);
	line-height: 1.4;
}

.ProseMirror h4 {
	font-size: var(--font-size-body-l);
	font-weight: 500;
	margin: var(--spacing-md) 0 var(--spacing-sm);
	color: var(--on-surface);
}

.ProseMirror p {
	margin: var(--spacing-sm) 0;
	line-height: 1.6;
}

.ProseMirror > * + * {
	margin-top: var(--spacing-sm);
}

/* Lists */
.ProseMirror ul,
.ProseMirror ol {
	padding-left: var(--spacing-xl);
	margin: var(--spacing-sm) 0;
}

.ProseMirror ul {
	list-style-type: disc;
}

.ProseMirror ol {
	list-style-type: decimal;
}

.ProseMirror li {
	margin: var(--spacing-xs) 0;
	line-height: 1.6;
}

.ProseMirror li > p {
	margin: 0;
}

.ProseMirror li > ul,
.ProseMirror li > ol {
	margin: var(--spacing-xs) 0;
}

/* Blockquote */
.ProseMirror blockquote {
	border-left: 3px solid var(--primary);
	padding-left: var(--spacing-md);
	margin: var(--spacing-md) 0;
	font-style: italic;
	color: var(--on-surface-variant);
	background-color: var(--surface-container);
	border-radius: var(--radius-sm);
}

/* Code blocks */
.ProseMirror pre {
	background-color: var(--surface-container-highest);
	color: var(--on-surface);
	padding: var(--spacing-md);
	border-radius: var(--radius-md);
	overflow-x: auto;
	font-family: "Consolas", "Monaco", "Courier New", monospace;
	font-size: var(--font-size-label-l);
	margin: var(--spacing-md) 0;
	border: 1px solid var(--outline-variant);
}

.ProseMirror code {
	background-color: var(--surface-container-high);
	color: var(--primary);
	padding: calc(var(--spacing-xxs) / 2) var(--spacing-xs);
	border-radius: var(--radius-sm);
	font-family: "Consolas", "Monaco", "Courier New", monospace;
	font-size: 0.9em;
}

/* Horizontal rule */
.ProseMirror hr {
	border: none;
	border-top: 1px solid var(--outline-variant);
	margin: var(--spacing-xl) 0;
}

/* Links */
.ProseMirror a {
	color: var(--primary);
	text-decoration: underline;
	text-underline-offset: 2px;
	cursor: pointer;
	transition: color 200ms ease;
}

.ProseMirror a:hover {
	color: var(--primary-container);
	text-decoration-thickness: 2px;
}

/* Highlight */
.ProseMirror mark {
	background-color: var(--tertiary-container);
	color: var(--on-tertiary-container);
	padding: 0 var(--spacing-xxs);
	border-radius: var(--radius-sm);
}

/* Strike through */
.ProseMirror s,
.ProseMirror del {
	text-decoration: line-through;
	opacity: 0.7;
}

/* Selection */
.ProseMirror ::selection {
	background-color: var(--primary-container);
	color: var(--on-primary-container);
}

/* Focus styles */
.ProseMirror:focus-visible {
	outline: 2px solid var(--primary);
	outline-offset: 2px;
	border-radius: var(--radius-md);
}

/* Tables (if you add table extension) */
.ProseMirror table {
	border-collapse: collapse;
	margin: var(--spacing-md) 0;
	width: 100%;
	overflow: auto;
}

.ProseMirror td,
.ProseMirror th {
	border: 1px solid var(--outline-variant);
	padding: var(--spacing-sm);
	position: relative;
}

.ProseMirror th {
	background-color: var(--surface-container);
	font-weight: 500;
	text-align: left;
}

.ProseMirror .selectedCell {
	background-color: var(--primary-container);
}

/* AI Suggestion Styles */
.ProseMirror span.suggestion {
	position: relative;
	transition: all 200ms ease;
}

.ProseMirror span.suggestion[data-suggestion-type="addition"] {
	background-color: var(--tertiary-container);
	color: var(--on-tertiary-container);
	padding: 0 var(--spacing-xxs);
	border-radius: var(--radius-sm);
	text-decoration: underline;
	text-decoration-style: wavy;
	text-decoration-color: var(--tertiary);
	text-underline-offset: 2px;
}

.ProseMirror span.suggestion[data-suggestion-type="deletion"] {
	background-color: var(--error-container);
	color: var(--on-error-container);
	text-decoration: line-through;
	text-decoration-thickness: 2px;
	opacity: 0.8;
}

.ProseMirror span.suggestion[data-suggestion-type="replacement"] {
	background-color: var(--secondary-container);
	color: var(--on-secondary-container);
	padding: 0 var(--spacing-xxs);
	border-radius: var(--radius-sm);
	border-bottom: 2px dotted var(--secondary);
}

/* AI Comment Highlights */
.ProseMirror span.comment {
	background-color: var(--primary-container);
	padding: 0 var(--spacing-xxs);
	border-radius: var(--radius-sm);
	position: relative;
	cursor: pointer;
}

.ProseMirror span.comment::after {
	content: "ðŸ’¬";
	position: absolute;
	top: -8px;
	right: -8px;
	font-size: 12px;
	background-color: var(--primary);
	color: var(--on-primary);
	width: 16px;
	height: 16px;
	border-radius: 50%;
	display: flex;
	align-items: center;
	justify-content: center;
}

.ProseMirror span.comment:hover {
	background-color: var(--primary);
	color: var(--on-primary);
}

/* Gapcursor for better UX */
.ProseMirror .ProseMirror-gapcursor {
	position: relative;
}

.ProseMirror .ProseMirror-gapcursor::after {
	content: "";
	display: block;
	position: absolute;
	top: -2px;
	width: 20px;
	border-top: 1px solid var(--primary);
	animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;
}

@keyframes ProseMirror-cursor-blink {
	to {
		visibility: hidden;
	}
}

/* Character count extension styles (if added) */
.character-count {
	margin-top: var(--spacing-sm);
	text-align: right;
	color: var(--on-surface-variant);
	font-size: var(--font-size-label-m);
}

.character-count--warning {
	color: var(--tertiary);
}

.character-count--danger {
	color: var(--error);
}

/* Collaboration cursor (for future use) */
.collaboration-cursor__caret {
	position: relative;
	margin-left: -1px;
	margin-right: -1px;
	border-left: 1px solid var(--primary);
	border-right: 1px solid var(--primary);
	word-break: normal;
	pointer-events: none;
}

.collaboration-cursor__label {
	position: absolute;
	top: -1.4em;
	left: -1px;
	font-size: var(--font-size-label-m);
	font-style: normal;
	font-weight: 600;
	line-height: normal;
	user-select: none;
	color: var(--on-primary);
	padding: 0.1rem 0.3rem;
	border-radius: var(--radius-sm) var(--radius-sm) var(--radius-sm) 0;
	white-space: nowrap;
}

/* Dragging styles */
.ProseMirror .ProseMirror-selectednode {
	outline: 2px solid var(--primary);
	outline-offset: 2px;
	border-radius: var(--radius-sm);
}

/* Loading state for AI processing */
@keyframes ai-pulse {
	0%,
	100% {
		opacity: 1;
	}
	50% {
		opacity: 0.5;
	}
}

.ProseMirror.ai-processing {
	position: relative;
}

.ProseMirror.ai-processing::after {
	content: "";
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	background: linear-gradient(
		90deg,
		transparent 0%,
		var(--tertiary-container) 50%,
		transparent 100%
	);
	opacity: 0.1;
	animation: ai-pulse 2s ease-in-out infinite;
	pointer-events: none;
}

/* Dark mode adjustments */
.dark .ProseMirror pre {
	background-color: var(--surface-container);
	border-color: var(--outline);
}

.dark .ProseMirror code {
	background-color: var(--surface-container-high);
}

.dark .ProseMirror blockquote {
	background-color: var(--surface-container-low);
	border-left-color: var(--primary);
}

/* Responsive adjustments */
@media (max-width: 768px) {
	.ProseMirror {
		font-size: var(--font-size-body-m);
		padding: var(--spacing-sm);
	}

	.ProseMirror h1 {
		font-size: var(--font-size-heading-m);
	}

	.ProseMirror h2 {
		font-size: var(--font-size-title-l);
	}
}

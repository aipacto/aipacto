#cloud-config

hostname: ${hostname}

# Ensure required groups exist
groups:
  - docker

# Create dedicated non-root user for management and app access
users:
  - name: tsadmin
    groups: [sudo, docker]
    shell: /bin/bash
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    lock_passwd: true  # No password login, only SSH/Tailscale
    ssh_authorized_keys:
      - ${ssh_public_key_content}

package_update: true
package_upgrade: true
packages:
  - curl
  - ca-certificates
  - apt-transport-https
  - gnupg
  - unattended-upgrades  # For auto-updates
  - fail2ban  # For intrusion prevention

# Write files for configurations
write_files:
  - path: /etc/ssh/sshd_config.d/hardening.conf
    permissions: "0644"
    content: |
      PasswordAuthentication no
      PermitRootLogin no
      PubkeyAuthentication yes
      ChallengeResponseAuthentication no
      UsePAM no
  - path: /etc/apt/apt.conf.d/50unattended-upgrades
    permissions: "0644"
    append: true
    content: |
      Unattended-Upgrade::Mail "admin@aipacto.com";  # Replace with your email
      Unattended-Upgrade::MailOnlyOnError "true";

runcmd:
  - |
    set -euxo pipefail
    # Harden root: Disable password (emergency console access still possible)
    passwd -d root || true
    chage -M 99999 root || true

    # Set up SSH hardening and restart
    systemctl restart sshd

    # Configure unattended-upgrades
    systemctl enable unattended-upgrades
    systemctl start unattended-upgrades
    unattended-upgrades --dry-run --debug || true

    # Configure Fail2Ban (default jails include SSH)
    systemctl enable fail2ban
    systemctl start fail2ban

    # Ensure tsadmin .ssh permissions
    mkdir -p /home/tsadmin/.ssh
    chown tsadmin:tsadmin /home/tsadmin/.ssh
    chmod 700 /home/tsadmin/.ssh
    [ -f /home/tsadmin/.ssh/authorized_keys ] && chmod 600 /home/tsadmin/.ssh/authorized_keys

    # Install Docker
    install -m 0755 -d /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    chmod a+r /etc/apt/keyrings/docker.gpg
    echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
      $(. /etc/os-release && echo $VERSION_CODENAME) stable" | \
      tee /etc/apt/sources.list.d/docker.list > /dev/null
    apt-get update
    apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
    systemctl enable --now docker

    # Install and configure Tailscale
    echo "Installing Tailscale..." | tee -a /var/log/tailscale-setup.log
    curl -fsSL https://pkgs.tailscale.com/stable/ubuntu/noble.noarmor.gpg | tee /usr/share/keyrings/tailscale-archive-keyring.gpg >/dev/null
    curl -fsSL https://pkgs.tailscale.com/stable/ubuntu/noble.tailscale-keyring.list | tee /etc/apt/sources.list.d/tailscale.list
    apt-get update || true
    apt-get install -y tailscale || {
      echo "Failed to install Tailscale via apt, trying direct download..." | tee -a /var/log/tailscale-setup.log
      curl -fsSL https://tailscale.com/install.sh | sh
    }
    systemctl enable --now tailscaled
    sleep 5  # Wait for daemon to stabilize
    echo "Starting Tailscale registration..." | tee -a /var/log/tailscale-setup.log
    for i in {1..3}; do
      tailscale up \
        --auth-key "${tailscale_authkey}" \
        --ssh \
        --hostname "${hostname}" \
        --advertise-tags="${tailscale_tags}" && break
      echo "Tailscale up attempt $i/3 failed, retrying..." | tee -a /var/log/tailscale-setup.log
      sleep 10
    done

    # Post-registration: Verify and log Tailscale IP
    echo "Verifying Tailscale registration..." | tee -a /var/log/tailscale-setup.log
    TS_IP=""
    for i in {1..10}; do
      TS_IP=$(tailscale ip -4 2>/dev/null | head -n1)
      if [ -n "$TS_IP" ]; then
        echo "Tailscale IP: $TS_IP" | tee -a /var/log/tailscale-setup.log
        break
      fi
      echo "Waiting for Tailscale IP (attempt $i/10)..." | tee -a /var/log/tailscale-setup.log
      sleep 5
    done
    if [ -z "$TS_IP" ]; then
      echo "Warning: Could not get Tailscale IP after retries" | tee -a /var/log/tailscale-setup.log
    fi

    # Create app directory (empty; Dagger will populate)
    mkdir -p /opt/aipacto
    chown tsadmin:tsadmin /opt/aipacto
